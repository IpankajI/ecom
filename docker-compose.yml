services:
  postgres:
    image: postgres:14.18-bookworm
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - PGUSER=root
      - POSTGRES_MULTIPLE_DATABASES=inventory,order,payment,user,sonar
    ports:
      - "5432:5432"
    networks:
      - ecom-network
    volumes:
      - ./tmp/postgres-data:/var/lib/postgresql/data
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 10s
  queue:
    image: localstack/localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    networks:
      - ecom-network
    volumes:
      - ./tmp/queue:/var/run/docker.sock
  mongo:
    image: mongodb/mongodb-community-server:6.0.19-ubi8
    ports:
      - "27017:27017"
    networks:
      - ecom-network
    volumes:
      - ./tmp/mongo/data/db:/data/db
  api-gateway:
    build:
      context: api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - ecom-network
    depends_on:
      - postgres
    volumes:
      - ./api-gateway:/app
  event-handler:
    build:
      context: event-handler
      dockerfile: Dockerfile
    networks:
      - ecom-network
    depends_on:
      - postgres
    volumes:
      - ./event-handler:/app
  inventory-service:
    build:
      context: inventory-service
      dockerfile: Dockerfile
    networks:
      - ecom-network
    depends_on:
      - postgres
      - sonarqube
    volumes:
      - ./inventory-service:/app
  order-service:
    build:
      context: order-service
      dockerfile: Dockerfile
    networks:
      - ecom-network
    depends_on:
      - postgres
    volumes:
      - ./order-service:/app
  payment-service:
    build:
      context: payment-service
      dockerfile: Dockerfile
    networks:
      - ecom-network
    depends_on:
      - postgres
    volumes:
      - ./payment-service:/app
  product-service:
    build:
      context: product-service
      dockerfile: Dockerfile
    networks:
      - ecom-network
    depends_on:
      - postgres
    volumes:
      - ./product-service:/app
  registry-server:
    build:
      context: registry-server
      dockerfile: Dockerfile
    networks:
      - ecom-network
    depends_on:
      - postgres
    volumes:
      - ./registry-server:/app
  user-service:
    build:
      context: user-service
      dockerfile: Dockerfile
    networks:
      - ecom-network
    depends_on:
      - postgres
    volumes:
      - ./user-service:/app

  sonarqube:
    image: sonarqube:community
    ports:
      - "9000:9000"
    depends_on:
      - postgres
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: root
      SONAR_JDBC_PASSWORD: password
    volumes:
      - ./tmp/sonarqube_data:/opt/sonarqube/data
      - ./tmp/sonarqube_extensions:/opt/sonarqube/extensions
      - ./tmp/sq-logs:/opt/sonarqube/logs
    networks:
      - ecom-network
networks:
  ecom-network:
    driver: bridge

volumes:
  postgres-s-data: